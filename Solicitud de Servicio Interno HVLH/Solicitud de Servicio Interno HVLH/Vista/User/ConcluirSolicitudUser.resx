<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCerrarConcluirTrabajo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAAHr4AAB6+AZG6jn4AAAQhSURBVHhe7d3bcqNADATQfLd/
        nl17Yy+2B2iNbi3QQ6pcCYZBZ1oDOJX8LMvy0188NWgMsgnZIA3C0x4YW3UnpEJCbrfbz+pr+fv6+bX+
        fr9+r9NePYY1HCV0mJANjEbBAbYm9FsNpSBr1c/XnQ4MZ7eGEpC9HXVS9BiPGlqD3HfaSRnXAJnQLiCN
        8g0CYUgTcp/58I47Ka9Ogdbs0VkkLevZitADdFImJvAMSCcFWyfRifu25s6CNMo+Corx1UU0II2iuJr6
        XY+/rki1II2y/Uhp6ibaAqRR/qFMt6n1FakViNmAil4uoxiHN82WIFdFQTGg2wBrkKuhmGLM3hgexs6q
        n5K3LxQDqddrG4+EXOGOHsWA2pTXoj6aCW4DT0yP6zl5JuSMSUExRG0qMiEzKOKYB6UFxVCNPyIhMyjT
        M8wJB8VQjzsSpOolMYqhSsZzIkWDVENBMdTJyASpgoJimCQjG4QdJQXD804djXDaie8s/uiY0HMUbZex
        hnwOEC2AaWvYAEHHIiqy5MqPAYSlfaEYrhODBSQbBcVwSwbDos7y7AvFcE0GK0h0UlAM92Qwg0Sh0GEw
        XPbuzTy0YDOtxHPfqjQxLepRawqKoSqs5FI34/G75uTQAiJJsdyX5pw238ueEMtH9/QY7GuI5R09iuEy
        6yXtq0pCNElBMZCW5w5WDUR6SYxiuBcaTUlFEGsUGoxqa4hmTdlLSoOg8QW2Q1vSaDsqCPZHJ5JizaJI
        jhG2bdU1RNO+wooLJPxrLFcEobi83cI6A0i3rJkoOr1nFuP5Prr2VTkhWgxKlKogVhh0KBVBUAzpHT1F
        +6oGgmKsr6Rm3pOGUwkELWzUJ48uaFVAUIy9ewyLfbgg9Ee42F9dcC/+6FaAPSHorJYUD91nyh09M4hn
        4Tz3LZkcZZ5loQXTnDx6jNCkMCYELZQGQ/MZvcVxN/fBBoJiWM7ajGOWAEEL4zFD0WNbToThebAkhKEg
        DGOY+jOx1jOUohC/9wTpY8lOCFoA60mwtz90TC7tKxMk9cQPPjBLG1sWCHrCkcmg+MWJDBAUw6UlCD9K
        Dh9rNEj4CQoB0h/dR4KgGJltauvY6NjVqY4CCTshg0SkokSAnAEj7NmXNwiKwdimUpLiCYJiqPuuY5sK
        R/ECQTEqJSPkPsUDBMWomAx3FGuQK2G4LPSWIChG5TblvqZYgaAYZ2hTrigWICjGGZNhvqZoQVCMMyfD
        FEUD0hjb/zpvujazIOgBr9CmTNeUGRAU40ptygxFAiKBaIz/7UxSN9FvnaA7vnKbUifFIyENoviXrJYg
        DXH8X6QPu4wE5OjZTYMcg9xrtIXyqN8MyOdOGwKDWNfpE+X1MxhktGF/bxnOaOu6hBzEetBn3l+DLDEz
        H51EDdIgXDMSnblR23VCyBLyB0ef89HiHldJAAAAAElFTkSuQmCC
</value>
  </data>
</root>